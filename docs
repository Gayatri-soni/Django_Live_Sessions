Django is a high-level Python web framework that encourages rapid development and clean,
pragmatic design. Django makes it easier to build better web apps quickly and with less code.

Note − Django is a registered trademark of the Django Software Foundation

Django – Design Philosophies
Django comes with the following design philosophies −

Loosely Coupled − Django aims to make each element of its stack independent of the others.

Less Coding − Less code so in turn a quick development.

Don't Repeat Yourself (DRY) − Everything should be developed only in exactly one place
instead of repeating it again and again.

Fast Development − Django's philosophy is to do all it can to facilitate hyper-fast development.

Clean Design − Django strictly maintains a clean design throughout its own code and makes it easy to
follow best web-development practices.


Advantages of Django
Here are few advantages of using Django which can be listed out here −

Object-Relational Mapping (ORM) Support − Django provides a bridge between the data model and the database engine,
 and supports a large set of database systems including MySQL, Oracle, Postgres, etc. Django also supports NoSQL database
 through Django-nonrel fork. For now, the only NoSQL databases supported are MongoDB and google app engine.

Multilingual Support − Django supports multilingual websites through its built-in internationalization system. So you can
develop your website, which would support multiple languages.

Framework Support − Django has built-in support for Ajax, RSS, Caching and various other frameworks.

Administration GUI − Django provides a nice ready-to-use user interface for administrative activities.

Development Environment − Django comes with a lightweight web server to facilitate end-to-end application development
and testing.


Installations ----

pip install virtualenv
virtualenv My_Project_Env
pip install django


C:\Users\user\Documents>My_Project_Env\Scripts\activate
(My_Project_Env) C:\Users\user\Documents>



django

django-admin startproject name





Project Structure :-

The “myproject” folder is just your project container, it actually contains two elements −

manage.py − This file is kind of your project local django-admin for interacting with your project via
command line (start the development server, sync db...). To get a full list of command accessible via manage.py

you can use the code −
python manage.py help provides list of command accessible via manage.py .(Try to run it.)

The “myproject” subfolder − This folder is the actual python package of your project. It contains four files −
__init__.py− Just for python, treat this folder as package.

settings.py − As the name indicates, your project settings.

urls.py − All links of your project and the function to call. A kind of ToC of your project.

wsgi.py − If you need to deploy your project over WSGI (Web Server Gateway Interface).









setting a variable in django ....

<html>
<div>Hello {{name}}!</div>
</html>









extending boilerplate


{% extends "./base2.html" %}
{% extends "../base1.html" %}
{% extends "./my/base3.html" %}



for loop
<ul>
{% for athlete in athlete_list %}
    <li>{{ athlete.name }}</li>
{% endfor %}
</ul>